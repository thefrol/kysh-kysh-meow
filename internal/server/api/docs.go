// Этот пакет создает хендлеры для обработки запросов к БД,
// Хендлеры устроены так, что они не знают с какой операцией
// над хранилищем они будут работать в общем виде, операция
// указывается как раз во время создания хендлера.
//
// напр,
// HandleJSONRequest(store.Get)
//
// Эта функция создаст хендлер для операции store.Get,
// сформатировав данные полученные в джейсоне по хттп
// к типа Metrica,  и передав его в операцию store.Get
//
// Обертки над операциями у нас есть такие:
// HandleURLRequest - обрабатывает запросы, где бедет данные из URL
// HandleJSONRequest - берет данные из джейсона в теле запроса
//
// Таким образом обертки это как бы источники данных. Они собирают из разных мест,
// и формируют из в понятном виде для обработчика operation. Этот вид - структура
// Metrica
//
// Таким образов хендлеры работают с операциями, причем
// сами данными не оперируют в общем виде.
//
// В пакете так же содержатся и другие функции, которые получают не только
// операцию, но и хранилище(хотя лучше бы они получали операцию, так бы хоть
// в едином стиле было todo) и возвращают данные о текущем состоянии, это
// функции
//
// DisplayHTML
// PingStore
package api

// Вот сейчас написал, что работают с операциями, но это не совсем так.
// Например, DisplayHTML и CheckDatabase определенно работают с хранилищем!
// Можно ли сделать как-то иначе, не знаю
